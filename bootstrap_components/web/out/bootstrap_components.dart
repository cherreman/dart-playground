// Auto-generated from bootstrap_components.html.
// DO NOT EDIT.

library bootstrap_components_html;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'dart:html';

import 'dart:math';

import '../tablecolumn.dart';

import 'button.html.dart';
import 'progressbar.html.dart';
import 'hbox.html.dart';
import 'checkbox.html.dart';
import 'table.html.dart';


// Original code
String progressBarValue = "50";
bool tableStriped = false;
bool tableBordered = true;
bool tableHover = true;
bool tableCondensed = false;
List<User> users = new List<User>();
List<Tablecolumn> tableColumns = new List<Tablecolumn>();

Random _random = new Random();



void main() {
  users.add(new User("Christophe", "Herreman", "christophe@stackandheap.com"));
  users.add(new User("Roland", "Zwaga", "roland@stackandheap.com"));
  
  tableColumns.add(new Tablecolumn("Firstname", "firstname"));
  tableColumns.add(new Tablecolumn("Lastname", "lastname"));
  tableColumns.add(new Tablecolumn("E-mail", "email"));
}

clickHandler() {
  progressBarValue = _random.nextInt(100).toString();
}

addRow() {
  users.add(new User("test", "test", "test@stackandheap.com"));
}

removeRow() {
  users.removeLast();
}

class User {
  String firstname;
  String lastname;
  String email;
  User(this.firstname, this.lastname, this.email);
}

// Additional generated code
/** Create the views and bind them to models. */
void init_autogenerated() {
  var _root = autogenerated_html.document.body;
  autogenerated_html.UnknownElement __e0;
  
  autogenerated_html.UnknownElement __e1;
  
  autogenerated_html.InputElement __e2;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  autogenerated_html.UnknownElement __e3;
  
  autogenerated_html.EventListener __listener__e3_click_2;
  
  autogenerated_html.UnknownElement __e4;
  
  autogenerated_html.UnknownElement __e5;
  
  autogenerated_html.UnknownElement __e6;
  
  autogenerated_html.UnknownElement __e12;
  
  autogenerated_html.UnknownElement __e7;
  
  autogenerated_html.UnknownElement __e8;
  
  autogenerated_html.UnknownElement __e9;
  
  autogenerated_html.UnknownElement __e10;
  
  autogenerated_html.UnknownElement __e11;
  
  autogenerated_html.UnknownElement __e13;
  
  autogenerated_html.UnknownElement __tableStripedCheckbox;
  
  autogenerated_html.UnknownElement __tableBorderedCheckbox;
  
  autogenerated_html.UnknownElement __tableHoverCheckbox;
  
  autogenerated_html.UnknownElement __tableCondensedCheckbox;
  
  autogenerated_html.UnknownElement __e16;
  
  autogenerated_html.UnknownElement __e14;
  
  autogenerated_html.EventListener __listener__e14_click_3;
  
  autogenerated_html.UnknownElement __e15;
  
  autogenerated_html.EventListener __listener__e15_click_4;
  
  autogenerated_html.UnknownElement __e17;
  


  // Initialize fields.
  __e0 = _root.query('#__e-0');
  new Button.forElement(__e0)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e1 = _root.query('#__e-1');
  new Button.forElement(__e1)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e2 = _root.query('#__e-2');
  __stoppers1 = [];
  __e3 = _root.query('#__e-3');
  new Button.forElement(__e3)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e4 = _root.query('#__e-4');
  new ProgressBar.forElement(__e4)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e5 = _root.query('#__e-5');
  new ProgressBar.forElement(__e5)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e6 = _root.query('#__e-6');
  new ProgressBar.forElement(__e6)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e12 = _root.query('#__e-12');
  __e7 = __e12.query('#__e-7');
  new Button.forElement(__e7)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e8 = __e12.query('#__e-8');
  new Button.forElement(__e8)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e9 = __e12.query('#__e-9');
  new Button.forElement(__e9)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e10 = __e12.query('#__e-10');
  new Button.forElement(__e10)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e11 = __e12.query('#__e-11');
  new Button.forElement(__e11)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  new HBox.forElement(__e12)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e13 = _root.query('#__e-13');
  __tableStripedCheckbox = __e13.query('#tableStripedCheckbox');
  new Checkbox.forElement(__tableStripedCheckbox)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __tableBorderedCheckbox = __e13.query('#tableBorderedCheckbox');
  new Checkbox.forElement(__tableBorderedCheckbox)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __tableHoverCheckbox = __e13.query('#tableHoverCheckbox');
  new Checkbox.forElement(__tableHoverCheckbox)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __tableCondensedCheckbox = __e13.query('#tableCondensedCheckbox');
  new Checkbox.forElement(__tableCondensedCheckbox)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  new HBox.forElement(__e13)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e16 = _root.query('#__e-16');
  __e14 = __e16.query('#__e-14');
  new Button.forElement(__e14)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e15 = __e16.query('#__e-15');
  new Button.forElement(__e15)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  new HBox.forElement(__e16)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e17 = _root.query('#__e-17');
  new Table.forElement(__e17)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  

  // Attach model to views.
  __e0.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e1.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => progressBarValue, (__e) { __e2.value = __e.newValue; }));
  
  __listener__e3_click_2 = ($event) {
    clickHandler();
    autogenerated.dispatch();
  };
  __e3.on.click.add(__listener__e3_click_2);
  
  __e3.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => progressBarValue, (__e) { __e4.xtag.value = __e.newValue; }));
  
  __e4.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => progressBarValue, (__e) { __e5.xtag.value = __e.newValue; }));
  
  __e5.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => progressBarValue, (__e) { __e6.xtag.value = __e.newValue; }));
  
  __e6.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e12.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e7.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e8.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e9.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e10.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e11.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e13.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __tableStripedCheckbox.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __tableBorderedCheckbox.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __tableHoverCheckbox.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __tableCondensedCheckbox.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __e16.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __listener__e14_click_3 = ($event) {
    addRow();
    autogenerated.dispatch();
  };
  __e14.on.click.add(__listener__e14_click_3);
  
  __e14.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __listener__e15_click_4 = ($event) {
    removeRow();
    autogenerated.dispatch();
  };
  __e15.on.click.add(__listener__e15_click_4);
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => !users.isEmpty, (__e) { __e15.xtag.enabled = __e.newValue; }));
  
  __e15.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => query('#tableBorderedCheckbox').xtag.checked, (__e) { __e17.xtag.bordered = __e.newValue; }));
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => tableColumns, (__e) { __e17.xtag.columns = __e.newValue; }));
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => query('#tableCondensedCheckbox').xtag.checked, (__e) { __e17.xtag.condensed = __e.newValue; }));
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => query('#tableHoverCheckbox').xtag.checked, (__e) { __e17.xtag.hover = __e.newValue; }));
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => users, (__e) { __e17.xtag.items = __e.newValue; }));
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => query('#tableStripedCheckbox').xtag.checked, (__e) { __e17.xtag.striped = __e.newValue; }));
  
  __e17.xtag..inserted()
  
  ..inserted_autogenerated();
  

}
