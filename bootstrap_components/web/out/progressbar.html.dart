// Auto-generated from progressbar.html.
// DO NOT EDIT.

library x_progressbar;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

class ProgressBar extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated_html.DivElement __e21;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  autogenerated_html.DivElement __e20;
  
  ProgressBar.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    _root.innerHtml = '''
    
    <div class="" id="__e-21">
    <div class="bar" id="__e-20"></div>
    </div>
    ''';
    __e21 = _root.query('#__e-21');
    __e20 = __e21.query('#__e-20');
    __stoppers1 = [];
    
  }
  
  void inserted_autogenerated() {
    __stoppers1.add(autogenerated.bindCssClasses(__e21, () => progressClass));
    
    __stoppers1.add(autogenerated.watchAndInvoke(() => value,  (__e) { __e20.attributes['style'] = 'width: ${__e.newValue}%;'; }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    (__stoppers1..forEach((s) => s())).clear();
    
    __e21 = null;
    
    __e20 = null;
    
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated_html.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  String striped = "false";
  String animated = "false";
  String value = "0";
  
  String get progressClass {
    var result = "progress";
    
    if (striped == "true") {
      result = "${result} progress-striped";
      if (animated == "true") {
        result = "${result} active";
      }
    }
    return result;
  }
  
  created() {
    value = attributes["value"];
    striped = attributes["striped"];
    animated = attributes["animated"];
  }
}

